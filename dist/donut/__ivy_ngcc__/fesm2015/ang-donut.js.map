{"version":3,"file":"ang-donut.js","sources":["ng:/ang-donut/lib/donut.service.ts","ng:/ang-donut/lib/donut.component.ts","ng:/ang-donut/lib/donut.module.ts","ng:/ang-donut/public-api.ts","ng:/ang-donut/ang-donut.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Donut } from './donut.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DonutService {\n\n  public sum: number;\n  constructor() { }\n\n  public getProcessedData(donutData: Donut[]): Donut[] {\n    this.sum = this.fetchSum(donutData);\n    donutData = this.calculatePercentages(donutData, this.sum);\n    donutData = this.calculateDashArrays(donutData);\n    donutData = this.getOffsets(donutData);\n    return donutData;\n  }\n\n\n  private calculateDashArrays(donutData: Donut[]): Donut[] {\n    donutData.forEach(data => {\n      data.strokeDasharray = this.getDasharrayString(data.percentage);\n    });\n    return donutData;\n  }\n\n  private calculatePercentages(donutData: Donut[], sum: number): Donut[] {\n    donutData.forEach(data => {\n      data.percentage = this.getRoundedPercentage(parseInt(data.value), sum);\n    });\n    return donutData;\n  }\n\n  private fetchSum(donutData: Donut[]): number {\n    return donutData.map(d => parseInt(d.value)).reduce((a, b) => a + b, 0);\n  }\n\n  private getRoundedPercentage(numerator: number, denominator: number): number {\n    if (!denominator) {\n      return 0;\n    }\n    return (Math.round(((numerator / denominator) * 100) * 10) / 10);\n  }\n\n  private getDasharrayString(dash: number): string {\n    return dash + ' ' + (100 - dash);\n  }\n\n  private getOffsets(donutData: Donut[]): Donut[] {\n    let firstOffset = 0;\n    let sumTillNow = 0;\n    donutData.forEach((data, i) => {\n      if (i === 0) {\n        data.strokeOffset = 0;\n        sumTillNow = data.percentage;\n      } else {\n        data.strokeOffset = 100 - sumTillNow;\n        sumTillNow += data.percentage;\n\n      }\n    });\n    return donutData;\n  }\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { DonutService } from './donut.service';\nimport { Donut } from './donut.model';\n\n@Component({\n  selector: 'ng-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.scss']\n})\nexport class DonutComponent implements OnInit, AfterViewInit {\n\n  public strokeWidth: number;\n  public innerLabelText: string;\n  public _showLegend: boolean;\n  public sum: number;\n  public _showTotal: boolean;\n  public width: number;\n  public height: number;\n  @ViewChild('parent') parent: ElementRef;\n  // Should total be shown inside Donut\n  @Input() set showTotal(value: boolean) {\n    if (value && value === true) {\n      this._showTotal = true;\n    }\n    else {\n      this._showTotal = false;\n    }\n  }\n  @Input() set showLegend(value: boolean) {\n    if (value && value === true) {\n      this._showLegend = true;\n    }\n    else {\n      this._showLegend = false;\n    }\n  }\n  @Input() set dim(value: number[]) {\n    if (value) {\n      this.height = value[0];\n      this.width = value[1];\n\n    }\n\n  }\n  // Data which needs to be rendered\n  @Input() donutData: Donut[];\n  // Inner Label text\n  @Input() set innerLabel(value: string) {\n    if (value) {\n      this.innerLabelText = value;\n    }\n    else {\n      this.innerLabelText = null;\n    }\n  }\n\n\n  constructor(private donutService: DonutService) { }\n\n  ngOnInit() {\n    // this.fetchFakeData();\n    this.donutData = this.donutService.getProcessedData(this.donutData);\n    //Settings Start // Need to bind these to input variables later\n    this.strokeWidth = 3;\n    this.sum = this.donutService.sum;\n    // this.showLegend = false;\n    //Settings End\n\n  \n  }\n\n  ngAfterViewInit() {\n      //Set Dim\n      this.parent.nativeElement.style.height = this.height + 'px';\n      this.parent.nativeElement.style.width = this.width + 'px';\n\n  }\n  fetchFakeData() {\n    this.donutData = [\n      { name: 'Red', value: '20', color: '#E25325' },\n      { name: 'Blue', value: '30', color: '#6064CF' },\n      { name: 'Black', value: '10', color: '#5A5C59' },\n      { name: 'Green', value: '40', color: '#50FD1D' }\n    ];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DonutComponent } from './donut.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [DonutComponent],\n  imports: [CommonModule],\n  exports: [DonutComponent]\n})\nexport class DonutModule { }\n","/*\n * Public API Surface of donut\n */\n\nexport * from './lib/donut.service';\nexport * from './lib/donut.component';\nexport * from './lib/donut.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}