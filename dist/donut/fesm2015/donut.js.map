{"version":3,"file":"donut.js","sources":["ng://donut/lib/donut.service.ts","ng://donut/lib/donut.component.html","ng://donut/lib/donut.component.ts","ng://donut/lib/donut.module.ts","ng://donut/public-api.ts","ng://donut/donut.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Donut } from './donut.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DonutService {\n\n  public sum: number;\n  constructor() { }\n\n  public getProcessedData(donutData: Donut[]): Donut[] {\n    this.sum = this.fetchSum(donutData);\n    donutData = this.calculatePercentages(donutData, this.sum);\n    donutData = this.calculateDashArrays(donutData);\n    donutData = this.getOffsets(donutData);\n    return donutData;\n  }\n\n\n  private calculateDashArrays(donutData: Donut[]): Donut[] {\n    donutData.forEach(data => {\n      data.strokeDasharray = this.getDasharrayString(data.percentage);\n    });\n    return donutData;\n  }\n\n  private calculatePercentages(donutData: Donut[], sum: number): Donut[] {\n    donutData.forEach(data => {\n      data.percentage = this.getRoundedPercentage(parseInt(data.value), sum);\n    });\n    return donutData;\n  }\n\n  private fetchSum(donutData: Donut[]): number {\n    return donutData.map(d => parseInt(d.value)).reduce((a, b) => a + b, 0);\n  }\n\n  private getRoundedPercentage(numerator: number, denominator: number): number {\n    if (!denominator) {\n      return 0;\n    }\n    return (Math.round(((numerator / denominator) * 100) * 10) / 10);\n  }\n\n  private getDasharrayString(dash: number): string {\n    return dash + ' ' + (100 - dash);\n  }\n\n  private getOffsets(donutData: Donut[]): Donut[] {\n    let firstOffset = 0;\n    let sumTillNow = 0;\n    donutData.forEach((data, i) => {\n      if (i === 0) {\n        data.strokeOffset = 0;\n        sumTillNow = data.percentage;\n      } else {\n        data.strokeOffset = 100 - sumTillNow;\n        sumTillNow += data.percentage;\n\n      }\n    });\n    return donutData;\n  }\n}\n","<div #parent>\r\n    <figure class='figure-class'>\r\n      <div class=\"figure-content\" fxFlex='57%'>\r\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 42 42\" class=\"donut\" aria-labelledby=\"beers-title beers-desc\"\r\n          role=\"img\">\r\n          <circle class=\"donut-hole\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"#fff\" role=\"presentation\"></circle>\r\n          <circle class=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke=\"#d2d3d4\"\r\n            stroke-width=\"3\" role=\"presentation\"></circle>\r\n  \r\n          <circle *ngFor=\"let data of donutData;\" class=\"donut-segment\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\"\r\n            fill=\"transparent\" [style.stroke]=\"data.color\" [style.stroke-width]=\"strokeWidth\" [style.stroke-dasharray]=\"data.strokeDasharray\"\r\n            [style.stroke-dashoffset]=\"data.strokeOffset\" aria-labelledby=\"donut-segment-1-title donut-segment-1-desc\">\r\n          </circle>\r\n          <!-- unused 10% -->\r\n          <g class=\"chart-text\">\r\n            <text *ngIf='innerLabelText' x=\"50%\" y=\"50%\" class=\"chart-label\">\r\n              {{innerLabelText}}\r\n            </text>\r\n            <text *ngIf='_showTotal' x=\"50%\" y=\"50%\" class=\"chart-number\">\r\n              {{sum}}\r\n            </text>\r\n          </g>\r\n        </svg>\r\n      </div>\r\n      <div class=\"figure-key\" fxFlex='43%'>\r\n      <figcaption>\r\n        <ul class=\"figure-key-list\" aria-hidden=\"true\" role=\"presentation\">\r\n          <li *ngFor=\"let data of donutData;\">\r\n            <span class=\"shape-circle\" [style.background-color]=\"data.color\"></span><b>{{data.name}} </b>\r\n            <span class=\"donut-data-count-percentage\">\r\n              {{data.value}}({{data.percentage}}%)\r\n            </span>\r\n          </li>\r\n          <!-- <li>\r\n            <span class=\"shape-circle shape-blue\"></span><b> Pend. Audit </b>\r\n            <span class=\"donut-data-count-percentage\">\r\n              {{1}}({{1}}%)\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"shape-circle shape-orange\"></span> <b>Audit In Prog.</b>\r\n            <span class=\"donut-data-count-percentage\">\r\n              {{1}}({{1}}%)\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"shape-circle shape-red\"></span> <b>Needs Review</b>\r\n            <span class=\"donut-data-count-percentage\">\r\n              {{1}}({{1}}%)\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span class=\"shape-circle shape-green\"></span> <b>Audit Cmplt </b>\r\n            <span class=\"donut-data-count-percentage\">\r\n              {{1}}({{1}}%)\r\n            </span>\r\n          </li> -->\r\n        </ul>\r\n      </figcaption>\r\n    </div>\r\n    </figure>\r\n  </div>","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { DonutService } from './donut.service';\nimport { Donut } from './donut.model';\n\n@Component({\n  selector: 'ng-donut',\n  templateUrl: './donut.component.html',\n  styleUrls: ['./donut.component.scss']\n})\nexport class DonutComponent implements OnInit, AfterViewInit {\n\n  public strokeWidth: number;\n  public innerLabelText: string;\n  public showLegend: boolean;\n  public sum: number;\n  public _showTotal: boolean;\n  public width: number;\n  public height: number;\n  @ViewChild('parent') parent: ElementRef;\n  // Should total be shown inside Donut\n  @Input() set showTotal(value: boolean) {\n    if (value && value === true) {\n      this._showTotal = true;\n    }\n    else {\n      this._showTotal = false;\n    }\n  }\n  @Input() set dim(value: number[]) {\n    if (value) {\n      this.height = value[0];\n      this.width = value[1];\n\n    }\n\n  }\n  // Data which needs to be rendered\n  @Input() donutData: Donut[];\n  // Inner Label text\n  @Input() set innerLabel(value: string) {\n    if (value) {\n      this.innerLabelText = value;\n    }\n    else {\n      this.innerLabelText = null;\n    }\n  }\n\n\n  constructor(private donutService: DonutService) { }\n\n  ngOnInit() {\n    // this.fetchFakeData();\n    this.donutData = this.donutService.getProcessedData(this.donutData);\n    //Settings Start // Need to bind these to input variables later\n    this.strokeWidth = 3;\n    this.sum = this.donutService.sum;\n    this.showLegend = false;\n    //Settings End\n\n  \n  }\n\n  ngAfterViewInit() {\n      //Set Dim\n      this.parent.nativeElement.style.height = this.height + 'px';\n      this.parent.nativeElement.style.width = this.width + 'px';\n\n  }\n  fetchFakeData() {\n    this.donutData = [\n      { name: 'Red', value: '20', color: '#E25325' },\n      { name: 'Blue', value: '30', color: '#6064CF' },\n      { name: 'Black', value: '10', color: '#5A5C59' },\n      { name: 'Green', value: '40', color: '#50FD1D' }\n    ];\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DonutComponent } from './donut.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [DonutComponent],\n  imports: [CommonModule],\n  exports: [DonutComponent]\n})\nexport class DonutModule { }\n","/*\n * Public API Surface of donut\n */\n\nexport * from './lib/donut.service';\nexport * from './lib/donut.component';\nexport * from './lib/donut.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵtextInterpolate2","i0.ɵɵnamespaceSVG","i0.ɵɵtemplate","i0.ɵɵnamespaceHTML","i0.ɵɵproperty"],"mappings":"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"}